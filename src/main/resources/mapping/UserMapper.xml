<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boleiot.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.boleiot.model.user.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="qq" jdbcType="VARCHAR" property="qq"/>
        <result column="company_name" jdbcType="VARCHAR" property="companyName"/>
        <result column="company_url" jdbcType="VARCHAR" property="companyUrl"/>
        <result column="company_address" jdbcType="VARCHAR" property="companyAddress"/>
        <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, password, phone, qq, company_name, company_url, company_address,last_login_time,create_time,status,salt
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.boleiot.model.user.User">
    insert into t_user (id, name, password, 
      phone, qq, company_name, 
      company_url, company_address,last_login_time,create_time,status,salt)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, 
      #{companyUrl,jdbcType=VARCHAR}, #{companyAddress,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP},
      #{createTime,jdbcType=TIMESTAMP},#{status,jdbcType=INTEGER},#{salt,jdbcType=VARCHAR})
  </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.boleiot.model.user.User">
        update t_user
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="qq != null">
                qq = #{qq,jdbcType=VARCHAR},
            </if>
            <if test="companyName != null">
                company_name = #{companyName,jdbcType=VARCHAR},
            </if>
            <if test="companyUrl != null">
                company_url = #{companyUrl,jdbcType=VARCHAR},
            </if>
            <if test="companyAddress != null">
                company_address = #{companyAddress,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="getUserByName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where name = #{username}
    </select>

    <select id="findRoles" resultType="String">
       select type from t_user u, t_role r,t_user_role ur where u.name=#{username} and u.id=ur.u_id and r.id=ur.r_id
    </select>
    <select id="findPermissions" resultType="String">
        select url from t_user u, t_role r, t_permission p, t_user_role ur, t_role_permission rp where u.name=#{username} and u.id=ur.u_id and r.id=ur.r_id and r.id=rp.r_id and p.id=rp.p_id
    </select>
</mapper>